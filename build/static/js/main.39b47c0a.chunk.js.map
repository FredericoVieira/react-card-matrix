{"version":3,"sources":["reducers/cards.js","reducers/index.js","store/configureStore.js","components/Card/index.js","actions/cards.js","components/Board/index.js","App.js","index.js"],"names":["initalState","id","isFlipped","combineReducers","cards","state","action","type","newState","map","card","initialState","connect","dispatch","flipCardClicked","flipCard","handleClick","e","preventDefault","className","onClick","key","sm","store","createStore","rootReducer","App","ReactDOM","render","document","getElementById"],"mappings":"iSAAMA,EAAc,CAClB,CAAEC,GAAI,EAAGC,WAAW,GACpB,CAAED,GAAI,EAAGC,WAAW,GACpB,CAAED,GAAI,EAAGC,WAAW,GACpB,CAAED,GAAI,EAAGC,WAAW,GACpB,CAAED,GAAI,EAAGC,WAAW,GACpB,CAAED,GAAI,EAAGC,WAAW,GACpB,CAAED,GAAI,EAAGC,WAAW,GACpB,CAAED,GAAI,EAAGC,WAAW,GACpB,CAAED,GAAI,EAAGC,WAAW,GACpB,CAAED,GAAI,GAAIC,WAAW,GACrB,CAAED,GAAI,GAAIC,WAAW,GACrB,CAAED,GAAI,GAAIC,WAAW,ICTRC,kBAAgB,CAC7BC,MDWK,WAA6C,IAA9BC,EAA6B,uDAArBL,EAAaM,EAAQ,uCACjD,OAAQA,EAAOC,MACb,IAAK,YACH,IAAMC,EAAWH,EAAMI,KAAI,SAAAC,GAAI,OAC7BA,EAAKT,KAAOK,EAAOL,GAAnB,eAA6BS,EAA7B,CAAmCR,WAAYQ,EAAKR,YAApD,eAAsEQ,EAAtE,CAA4ER,WAAW,OAEzF,OAAOM,EAET,QACE,OAAOH,M,8CEpB0BM,EC6BxBC,cAAQ,MANI,SAAAC,GACzB,MAAO,CACLC,gBAAiB,SAAAb,GAAE,OAAIY,EC7BpB,SAAkBZ,GACvB,MAAO,CACLM,KAAM,YACNN,MD0BgCc,CAASd,QAI9BW,EA1BF,SAAC,GAAwC,IAAtCX,EAAqC,EAArCA,GAAIC,EAAiC,EAAjCA,UAAWY,EAAsB,EAAtBA,gBAEvBE,EAAc,SAACC,GACnBA,EAAEC,iBACFJ,EAAgBb,IAGlB,OACE,kBAAC,IAAD,CAAeC,UAAWA,EAAWiB,UAAU,gBAC7C,yBAAKA,UAAU,kBAAkBC,QAASJ,GAA1C,SAIA,yBAAKG,UAAU,iBAAiBC,QAASJ,GAAzC,YEWSJ,eANS,SAAAP,GACtB,MAAO,CACLD,MAAOC,EAAMD,SAIuB,KAAzBQ,EAvBD,SAAC,GAAe,IAAbR,EAAY,EAAZA,MACf,OACE,oCACE,uBAAGe,UAAU,SAAb,qBACA,kBAAC,YAAD,KACE,kBAAC,MAAD,CAAKA,UAAU,OACdf,EAAMK,KAAI,SAAAC,GAAI,OACb,kBAAC,MAAD,CAAKW,IAAKX,EAAKT,GAAIqB,GAAI,EAAGH,UAAU,OAClC,kBAAC,EAAD,CAAMlB,GAAIS,EAAKT,GAAIC,UAAWQ,EAAKR,sBCXzCqB,EJAGC,YAAYC,EAAad,GIUnBe,EARH,WACV,OACE,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,Q,MCLNI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.39b47c0a.chunk.js","sourcesContent":["const initalState = [\n  { id: 1, isFlipped: true },\n  { id: 2, isFlipped: true },\n  { id: 3, isFlipped: true },\n  { id: 4, isFlipped: true },\n  { id: 5, isFlipped: true },\n  { id: 6, isFlipped: true },\n  { id: 7, isFlipped: true },\n  { id: 8, isFlipped: true },\n  { id: 9, isFlipped: true },\n  { id: 10, isFlipped: true },\n  { id: 11, isFlipped: true },\n  { id: 12, isFlipped: true }\n]\n\nexport function cards(state = initalState, action) {\n  switch (action.type) {\n    case \"FLIP_CARD\":\n      const newState = state.map(card =>\n        card.id === action.id ? { ...card, isFlipped: !card.isFlipped} : { ...card, isFlipped: true }\n      )\n      return newState\n\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport { cards } from \"./cards\";\n\nexport default combineReducers({\n  cards\n});","  \nimport { createStore } from \"redux\";\nimport rootReducer from \"../reducers\";\n\nexport default function configureStore(initialState) {\n  return createStore(rootReducer, initialState);\n}","import React from \"react\";\nimport ReactCardFlip from \"react-card-flip\";\nimport { connect } from \"react-redux\";\nimport { flipCard } from \"../../actions/cards\";\n\nimport \"./styles.scss\";\n\nconst Card = ({ id, isFlipped, flipCardClicked }) => {\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    flipCardClicked(id)\n  }\n\n  return (\n    <ReactCardFlip isFlipped={isFlipped} className=\"card-wrapper\">\n      <div className=\"card card-front\" onClick={handleClick}>\n        FRONT\n      </div>\n\n      <div className=\"card card-back\" onClick={handleClick}>\n        BACK\n      </div>\n    </ReactCardFlip> \n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    flipCardClicked: id => dispatch(flipCard(id)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Card);\n","export function flipCard(id) {\n  return {\n    type: \"FLIP_CARD\",\n    id\n  };\n}\n","import React, { useState } from \"react\";\nimport { Container, Row, Col } from \"react-grid-system\";\nimport { connect } from \"react-redux\";\n\nimport \"./styles.scss\";\n\nimport Card from \"../Card/\";\n\nconst Board = ({ cards }) => {\n  return (\n    <>\n      <p className=\"title\">React Card Matrix</p>\n      <Container>\n        <Row className=\"row\">\n        {cards.map(card =>\n          <Col key={card.id} sm={3} className=\"col\">\n            <Card id={card.id} isFlipped={card.isFlipped} />\n          </Col>\n        )}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    cards: state.cards\n  };\n};\n\nexport default connect(mapStateToProps, null)(Board);\n","import React from \"react\";\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport Board from \"./components/Board/\";\n\nconst store = configureStore();\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Board />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}